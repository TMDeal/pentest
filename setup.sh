#!/bin/bash

download_github_release() {
	repo="$1"
	shift

	all_downloads=$(curl -s "https://api.github.com/repos/$repo/releases/latest" | jq -r ".assets[] | .browser_download_url")

	for download in $all_downloads; do
		if [[ ! -z $@ ]]; then
			echo $download | grep $@ 1>/dev/null
			if [[ $? -eq 0 ]]; then
				wget -q "$download"
			fi
		else
			wget -q "$download"
		fi
	done
}

build_dive() {
	echo '[!] Building dive'

	make 1>/dev/null
	ln -sf ../dive/dist/dive_linux_amd64/dive ../bin/dive

	echo '[O] dive setup successful'
}

download_kerbrute() {
	echo '[!] Installing kerbrute'
	if [ ! -z "$(ls -A)" ]; then
		echo '[.] Removing old files...'
		rm -rf *
	fi

	echo '[.] Downloading kerbrute binaries...'
	download_github_release "ropnop/kerbrute"

	kerbrute_binary="kerbrute_linux_amd64"
	chmod +x ./kerbrute_linux_amd64
	ln -sf ../kerbrute/kerbrute_linux_amd64 ../bin/kerbrute
	
	echo '[O] kerbrute setup successful'
}

download_peass() {
	echo '[!] Downloading PEASS scripts'

	if [ ! -z "$(ls -A)" ]; then
		echo '[.] Removing old files...'
		rm -rf *
	fi

	echo '[.] Downloading PEASS scripts'
	download_github_release "carlospolop/PEASS-ng"

	echo '[O] PEASS setup successful'
}

link_scripts() {
	echo '[!] Creating symlinks for scripts'

	echo '[.] Creating symlink for smbver'
	ln -sf ../scripts/smbver ../bin/smbver

	echo '[.] Creating symlink for tightvnc_decrypt'
	ln -sf ../scripts/tightvnc_decrypt ../bin/tightvnc_decrypt

	echo '[.] Creating symlink for wesng'
	ln -sf ../scripts/wesng ../bin/wesng

	echo '[.] Creating symlink for pret'
	ln -sf ../scripts/pret ../bin/pret

	echo '[.] Creating symlink to /usr/share/windows-resources'
	ln -sf /usr/share/windows-resources ../windows

	echo '[O] scripts all symlinked successfully'
}

git submodule update --init --recursive

cd dive
build_dive
cd ..

cd kerbrute
download_kerbrute
cd ..

cd PEASS
download_peass
cd ..

cd scripts
link_scripts
cd ..

echo '[O] Pentest files are all ready for use!'
